package submsrvc

import (
	"context"
	"testing"
	"time"

	"github.com/google/uuid"
	"github.com/jmoiron/sqlx"
	"github.com/stretchr/testify/require"
)

func TestPgSubmRepo(t *testing.T) {
	// TODO: setup pg using devcontainers
	pg := setupDevPgDevContainer(t)
	var repo submRepo = newPgSubmRepo(pg)

	subm := Submission{
		UUID:    uuid.New(),
		Content: "labdien",
		Author: Author{
			UUID:     uuid.New(),
			Username: "testuser",
		},
		Task: Task{
			ShortID:  "shortid",
			FullName: "fullname",
		},
		Lang: PrLang{
			ShortID: "shortlangid",
			Display: "displaylang",
		},
		CurrEval: Evaluation{
			UUID:      uuid.New(),
			Stage:     "stage",
			ScoreUnit: "scoreunit",
			Subtasks: []Subtask{
				{Points: 1, Description: "1", StTests: []int{1, 3, 4}},
				{Points: 2, Description: "2", StTests: []int{1}},
			},
			Groups: []TestGroup{
				{Points: 3, Subtasks: []int{1}, TgTests: []int{1, 2, 3, 4}},
				{Points: 4, Subtasks: []int{1, 3}, TgTests: []int{3}},
			},
			Tests: []Test{
				{Ac: true, Wa: false, Tle: true, Mle: true, Re: false, Ig: true, Reached: false, Finished: true},
				{Ac: false, Wa: true, Tle: false, Mle: false, Re: true, Ig: false, Reached: true, Finished: false},
			},
			CreatedAt: time.Now(),
		},
		CreatedAt: time.Now(),
	}

	err := repo.Store(context.Background(), subm)
	require.NoError(t, err)

	subm2, err := repo.Get(context.Background(), subm.UUID)
	require.NoError(t, err)

	require.Equal(t, subm, *subm2)
}

func setupDevPgDevContainer(t *testing.T) *sqlx.DB {
	// TODO: setup pg using devcontainers
	return nil
}
