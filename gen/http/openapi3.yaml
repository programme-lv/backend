openapi: 3.0.3
info:
    title: Programme.lv backend
    description: Service for managing users, tasks, and submissions.
    version: 0.0.1
servers:
    - url: http://localhost:80
      description: Default server for programme_lv
paths:
    /auth/current/jwt:
        get:
            tags:
                - users
            summary: queryCurrentJWT users
            description: Query current JWT
            operationId: users#queryCurrentJWT
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: JWT token used for authentication
                    example: jwt_token
                  example: jwt_token
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: current_jwt_token
                            example: current_jwt_token
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ut earum officiis quibusdam et velit dolores.
                            example: Nihil modi molestiae velit ducimus tempore non.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Aut temporibus sint labore.
                            example: Modi sequi molestiae.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Maiores voluptatem sit enim corporis.
                            example: Velit beatae omnis unde ea quos voluptas.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Doloremque doloribus sit qui et in.
                                name: Accusamus aut voluptas blanditiis suscipit molestiae sed.
            security:
                - jwt_query_Authorization:
                    - api:access
    /auth/login:
        post:
            tags:
                - users
            summary: login users
            description: User login
            operationId: users#login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequestBody'
                        example:
                            email: johndoe@example.com
                            password: password123
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: jwt_token
                            example: jwt_token
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: jwt_token
                            example: Eveniet nesciunt veniam quae veritatis qui aliquid.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: jwt_token
                            example: Nam harum nihil.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ut consequatur cumque.
                            example: Delectus exercitationem sunt ad mollitia.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Illum est.
                                name: Et reprehenderit labore tenetur distinctio.
    /users:
        get:
            tags:
                - users
            summary: listUsers users
            description: List all users
            operationId: users#listUsers
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: JWT token used for authentication
                    example: jwt_token
                  example: jwt_token
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                                example:
                                    - email: johndoe@example.com
                                      firstname: John
                                      lastname: Doe
                                      username: johndoe
                                      uuid: 550e8400-e29b-41d4-a716-446655440000
                                    - email: johndoe@example.com
                                      firstname: John
                                      lastname: Doe
                                      username: johndoe
                                      uuid: 550e8400-e29b-41d4-a716-446655440000
                            example:
                                - email: johndoe@example.com
                                  firstname: John
                                  lastname: Doe
                                  username: johndoe
                                  uuid: 550e8400-e29b-41d4-a716-446655440000
                                - email: johndoe@example.com
                                  firstname: John
                                  lastname: Doe
                                  username: johndoe
                                  uuid: 550e8400-e29b-41d4-a716-446655440000
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ipsam consectetur dolorum rerum.
                            example: Dolor sunt.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Velit dolorem sit dolorem.
                            example: Aliquid perferendis expedita.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Qui deleniti aliquam.
                            example: Sapiente temporibus sed minus incidunt sit.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Illo numquam esse consectetur quo.
                                name: Incidunt distinctio.
            security:
                - jwt_query_Authorization:
                    - api:access
        post:
            tags:
                - users
            summary: createUser users
            description: Create a new user
            operationId: users#createUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            email: johndoe@example.com
                            firstname: John
                            lastname: Doe
                            password: password123
                            username: johndoe
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                email: johndoe@example.com
                                firstname: John
                                lastname: Doe
                                username: johndoe
                                uuid: 550e8400-e29b-41d4-a716-446655440000
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ut nesciunt.
                            example: Beatae qui aliquid.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Incidunt et adipisci culpa.
                            example: Molestiae tenetur quasi adipisci odio.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Fuga saepe et illo aut recusandae perferendis.
                            example: Et magni voluptate velit.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Velit neque impedit consequatur vel qui aut.
                                name: Fugit quas.
    /users/{uuid}:
        delete:
            tags:
                - users
            summary: deleteUser users
            description: Delete a user
            operationId: users#deleteUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: JWT token used for authentication
                    example: jwt_token
                  example: jwt_token
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  schema:
                    type: string
                    description: UUID of the user
                    example: 550e8400-e29b-41d4-a716-446655440000
                  example: 550e8400-e29b-41d4-a716-446655440000
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Non velit.
                            example: Ut quis autem doloribus.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Sit autem doloribus.
                            example: Ipsum quos quia placeat.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Sunt natus.
                            example: Vitae molestiae qui officiis aut molestias.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Ullam eius repudiandae cupiditate laboriosam praesentium.
                                name: Sed labore quas laboriosam aperiam.
            security:
                - jwt_query_Authorization:
                    - api:access
        get:
            tags:
                - users
            summary: getUser users
            description: Get a user by UUID
            operationId: users#getUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: JWT token used for authentication
                    example: jwt_token
                  example: jwt_token
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  schema:
                    type: string
                    description: UUID of the user
                    example: 550e8400-e29b-41d4-a716-446655440000
                  example: 550e8400-e29b-41d4-a716-446655440000
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                email: johndoe@example.com
                                firstname: John
                                lastname: Doe
                                username: johndoe
                                uuid: 550e8400-e29b-41d4-a716-446655440000
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Reprehenderit nemo eligendi veritatis non ducimus harum.
                            example: Reiciendis rerum.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Sed quo.
                            example: Temporibus sed et sint sit.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quo corrupti voluptas iure aut debitis quis.
                            example: Eius sunt molestias commodi laudantium nobis.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Cupiditate commodi perspiciatis veritatis earum explicabo.
                                name: Autem et in voluptatem vitae provident.
            security:
                - jwt_query_Authorization:
                    - api:access
        put:
            tags:
                - users
            summary: updateUser users
            description: Update an existing user
            operationId: users#updateUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: JWT token used for authentication
                    example: jwt_token
                  example: jwt_token
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  schema:
                    type: string
                    description: UUID of the user
                    example: 550e8400-e29b-41d4-a716-446655440000
                  example: 550e8400-e29b-41d4-a716-446655440000
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequestBody'
                        example:
                            email: johndoe@example.com
                            firstname: John
                            lastname: Doe
                            password: password123
                            username: johndoe
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                email: johndoe@example.com
                                firstname: John
                                lastname: Doe
                                username: johndoe
                                uuid: 550e8400-e29b-41d4-a716-446655440000
                "400":
                    description: 'InvalidUserDetails: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example: Ut ab non atque soluta facere.
                "401":
                    description: 'InvalidCredentials: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Voluptatum enim voluptatum omnis dicta rem.
                            example: Ut assumenda.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ut et itaque labore soluta.
                            example: Quidem quia nobis provident dolorem sed ea.
                "409":
                    description: 'InsertConflict: Insertion conflict'
                    content:
                        application/vnd.service.insertconflict:
                            schema:
                                $ref: '#/components/schemas/ServiceInsertconflict'
                            example:
                                conflict_value: Ea occaecati et.
                                name: A dignissimos dignissimos fugiat aperiam eum.
            security:
                - jwt_query_Authorization:
                    - api:access
components:
    schemas:
        CreateUserRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: Email of the user
                    example: johndoe@example.com
                    format: email
                firstname:
                    type: string
                    description: First name of the user
                    example: John
                lastname:
                    type: string
                    description: Last name of the user
                    example: Doe
                password:
                    type: string
                    description: Password of the user
                    example: password123
                    minLength: 8
                username:
                    type: string
                    description: Username of the user
                    example: johndoe
                    minLength: 1
            example:
                email: johndoe@example.com
                firstname: John
                lastname: Doe
                password: password123
                username: johndoe
            required:
                - username
                - email
                - firstname
                - lastname
                - password
        LoginRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: Email of the user
                    example: johndoe@example.com
                    format: email
                password:
                    type: string
                    description: Password of the user
                    example: password123
                    minLength: 8
            example:
                email: johndoe@example.com
                password: password123
            required:
                - email
                - password
        ServiceInsertconflict:
            type: object
            properties:
                conflict_value:
                    type: string
                    example: Aperiam omnis nihil reiciendis.
                name:
                    type: string
                    description: Name of error used by goa to encode response
                    example: Ratione similique dolores asperiores esse voluptates.
            description: Insertion conflict
            example:
                conflict_value: Est dignissimos expedita maiores.
                name: Dolorem molestiae maiores quo.
            required:
                - conflict_value
                - name
        UpdateUserRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: Email of the user
                    example: johndoe@example.com
                    format: email
                firstname:
                    type: string
                    description: First name of the user
                    example: John
                lastname:
                    type: string
                    description: Last name of the user
                    example: Doe
                password:
                    type: string
                    description: Password of the user
                    example: password123
                    minLength: 8
                username:
                    type: string
                    description: Username of the user
                    example: johndoe
                    minLength: 1
            example:
                email: johndoe@example.com
                firstname: John
                lastname: Doe
                password: password123
                username: johndoe
            required:
                - username
                - email
                - firstname
                - lastname
        User:
            type: object
            properties:
                email:
                    type: string
                    description: Email of the user
                    example: johndoe@example.com
                    format: email
                firstname:
                    type: string
                    description: First name of the user
                    example: John
                lastname:
                    type: string
                    description: Last name of the user
                    example: Doe
                username:
                    type: string
                    description: Username of the user
                    example: johndoe
                uuid:
                    type: string
                    description: Unique user UUID
                    example: 550e8400-e29b-41d4-a716-446655440000
            description: User representation
            example:
                email: johndoe@example.com
                firstname: John
                lastname: Doe
                username: johndoe
                uuid: 550e8400-e29b-41d4-a716-446655440000
            required:
                - uuid
                - username
                - email
                - firstname
                - lastname
    securitySchemes:
        jwt_query_Authorization:
            type: http
            scheme: bearer
tags:
    - name: users
      description: Service to manage users
