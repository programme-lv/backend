// Code generated by goa v3.18.2, DO NOT EDIT.
//
// submissions client HTTP transport
//
// Command:
// $ goa gen github.com/programme-lv/backend/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the submissions service endpoint HTTP clients.
type Client struct {
	// CreateSubmission Doer is the HTTP client used to make requests to the
	// createSubmission endpoint.
	CreateSubmissionDoer goahttp.Doer

	// ListSubmissions Doer is the HTTP client used to make requests to the
	// listSubmissions endpoint.
	ListSubmissionsDoer goahttp.Doer

	// GetSubmission Doer is the HTTP client used to make requests to the
	// getSubmission endpoint.
	GetSubmissionDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the submissions service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		CreateSubmissionDoer: doer,
		ListSubmissionsDoer:  doer,
		GetSubmissionDoer:    doer,
		CORSDoer:             doer,
		RestoreResponseBody:  restoreBody,
		scheme:               scheme,
		host:                 host,
		decoder:              dec,
		encoder:              enc,
	}
}

// CreateSubmission returns an endpoint that makes HTTP requests to the
// submissions service createSubmission server.
func (c *Client) CreateSubmission() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateSubmissionRequest(c.encoder)
		decodeResponse = DecodeCreateSubmissionResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateSubmissionRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateSubmissionDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("submissions", "createSubmission", err)
		}
		return decodeResponse(resp)
	}
}

// ListSubmissions returns an endpoint that makes HTTP requests to the
// submissions service listSubmissions server.
func (c *Client) ListSubmissions() goa.Endpoint {
	var (
		decodeResponse = DecodeListSubmissionsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildListSubmissionsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListSubmissionsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("submissions", "listSubmissions", err)
		}
		return decodeResponse(resp)
	}
}

// GetSubmission returns an endpoint that makes HTTP requests to the
// submissions service getSubmission server.
func (c *Client) GetSubmission() goa.Endpoint {
	var (
		decodeResponse = DecodeGetSubmissionResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetSubmissionRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetSubmissionDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("submissions", "getSubmission", err)
		}
		return decodeResponse(resp)
	}
}
