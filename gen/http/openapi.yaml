swagger: "2.0"
info:
    title: Programme.lv backend
    description: Service for managing users, tasks, and submissions.
    version: 0.0.1
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /auth/current/jwt:
        get:
            tags:
                - users
            summary: queryCurrentJWT users
            description: Query current JWT
            operationId: users#queryCurrentJWT
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used for authentication
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersQueryCurrentJWTResponseBody'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /auth/login:
        post:
            tags:
                - users
            summary: login users
            description: User login
            operationId: users#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UsersLoginRequestBody'
                    required:
                        - username
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
    /programming-languages:
        get:
            tags:
                - submissions
            summary: listProgrammingLanguages submissions
            description: List all available programming languages
            operationId: submissions#listProgrammingLanguages
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProgrammingLangResponse'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
    /subm-updates:
        get:
            tags:
                - submissions
            summary: streamSubmissionUpdates submissions
            description: Stream updates to all submissions in real-time
            operationId: submissions#streamSubmissionUpdates
            responses:
                "101":
                    description: Switching Protocols response.
                    schema:
                        $ref: '#/definitions/SubmissionsStreamSubmissionUpdatesResponseBody'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - ws
    /submissions:
        get:
            tags:
                - submissions
            summary: listSubmissions submissions
            description: List all submissions
            operationId: submissions#listSubmissions
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/SubmissionResponse'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
        post:
            tags:
                - submissions
            summary: createSubmission submissions
            description: Create a new submission
            operationId: submissions#createSubmission
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used for authentication
                  required: true
                  type: string
                - name: CreateSubmissionRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/SubmissionsCreateSubmissionRequestBody'
                    required:
                        - submission
                        - username
                        - programming_lang_id
                        - task_code_id
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/SubmissionsCreateSubmissionResponseBody'
                        required:
                            - subm_uuid
                            - submission
                            - username
                            - created_at
                            - eval_status
                            - p_lang_id
                            - p_lang_display_name
                            - p_lang_monaco_id
                            - task_name
                            - task_id
                            - eval_uuid
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /submissions/{uuid}:
        get:
            tags:
                - submissions
            summary: getSubmission submissions
            description: Get a submission by UUID
            operationId: submissions#getSubmission
            parameters:
                - name: uuid
                  in: path
                  description: UUID of the submission
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SubmissionsGetSubmissionResponseBody'
                        required:
                            - subm_uuid
                            - submission
                            - username
                            - created_at
                            - eval_status
                            - p_lang_id
                            - p_lang_display_name
                            - p_lang_monaco_id
                            - task_name
                            - task_id
                            - eval_uuid
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
    /tasks:
        get:
            tags:
                - tasks
            summary: listTasks tasks
            description: List all tasks
            operationId: tasks#listTasks
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TaskResponse'
                "404":
                    description: Not Found response.
                    schema:
                        type: string
            schemes:
                - http
    /tasks/{task_id}:
        get:
            tags:
                - tasks
            summary: getTask tasks
            description: Get a task by its ID
            operationId: tasks#getTask
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TasksGetTaskResponseBody'
                        required:
                            - published_task_id
                            - task_full_name
                            - memory_limit_megabytes
                            - cpu_time_limit_seconds
                            - origin_olympiad
                            - difficulty_rating
                "404":
                    description: Not Found response.
                    schema:
                        type: string
            schemes:
                - http
    /users:
        post:
            tags:
                - users
            summary: createUser users
            description: Create a new user
            operationId: users#createUser
            parameters:
                - name: CreateUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UsersCreateUserRequestBody'
                    required:
                        - username
                        - email
                        - firstname
                        - lastname
                        - password
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/UsersCreateUserResponseBody'
                        required:
                            - uuid
                            - username
                            - email
                            - firstname
                            - lastname
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
    /users/{uuid}:
        get:
            tags:
                - users
            summary: getUser users
            description: |-
                Get a user by UUID

                **Required security scopes for jwt**:
                  * `users:read`
            operationId: users#getUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  required: true
                  type: string
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersGetUserResponseBody'
                        required:
                            - uuid
                            - username
                            - email
                            - firstname
                            - lastname
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_query_Authorization: []
        delete:
            tags:
                - users
            summary: deleteUser users
            description: |-
                Delete a user

                **Required security scopes for jwt**:
                  * `users:write`
            operationId: users#deleteUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  required: true
                  type: string
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  type: string
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_query_Authorization: []
definitions:
    ExampleResponse:
        title: ExampleResponse
        type: object
        properties:
            input:
                type: string
                description: Example input
                example: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
            md_note:
                type: string
                description: Markdown note for the example
                example: Minima ut quo recusandae omnis magni alias.
            output:
                type: string
                description: Example output
                example: |
                    10
        description: Represents an example for a task
        example:
            input: |
                5 9 3
                A....X..B
                ..X..X.X.
                .XXX.XX..
                X.X.X..X.
                ...XX....
            md_note: Sed nostrum quidem molestiae similique iusto.
            output: |
                10
        required:
            - input
            - output
    ExampleResponseBody:
        title: ExampleResponseBody
        type: object
        properties:
            input:
                type: string
                description: Example input
                example: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
            md_note:
                type: string
                description: Markdown note for the example
                example: Rerum molestias pariatur adipisci aspernatur quia corrupti.
            output:
                type: string
                description: Example output
                example: |
                    10
        description: Represents an example for a task
        example:
            input: |
                5 9 3
                A....X..B
                ..X..X.X.
                .XXX.XX..
                X.X.X..X.
                ...XX....
            md_note: Ullam et iste sit quo quis.
            output: |
                10
        required:
            - input
            - output
    MarkdownStatementResponse:
        title: MarkdownStatementResponse
        type: object
        properties:
            input:
                type: string
                description: Input section of the markdown statement
                example: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes:
                type: string
                description: Notes section of the markdown statement
                example: Ipsam vel eos veniam in aut autem.
            output:
                type: string
                description: Output section of the markdown statement
                example: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring:
                type: string
                description: Scoring section of the markdown statement
                example: Pariatur maiores est.
            story:
                type: string
                description: Story section of the markdown statement
                example: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        description: Represents a markdown statement for a task
        example:
            input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes: Minima a et blanditiis.
            output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring: Rerum blanditiis.
            story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        required:
            - story
            - input
            - output
    MarkdownStatementResponseBody:
        title: MarkdownStatementResponseBody
        type: object
        properties:
            input:
                type: string
                description: Input section of the markdown statement
                example: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes:
                type: string
                description: Notes section of the markdown statement
                example: Aspernatur adipisci quo et enim.
            output:
                type: string
                description: Output section of the markdown statement
                example: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring:
                type: string
                description: Scoring section of the markdown statement
                example: Magnam sed officia.
            story:
                type: string
                description: Story section of the markdown statement
                example: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        description: Represents a markdown statement for a task
        example:
            input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes: Magnam et.
            output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring: Explicabo aliquam.
            story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        required:
            - story
            - input
            - output
    ProgrammingLangResponse:
        title: ProgrammingLangResponse
        type: object
        properties:
            codeFilename:
                type: string
                description: Default code filename for the language
                example: main.go
            compileCmd:
                type: string
                description: Compilation command for the language
                example: go build
            compiledFilename:
                type: string
                description: Name of the compiled output file
                example: main
            enabled:
                type: boolean
                description: Whether the language is enabled
                example: true
            envVersionCmd:
                type: string
                description: Command to get environment version
                example: go version
            executeCmd:
                type: string
                description: Execution command for the language
                example: go run
            fullName:
                type: string
                description: Full name of the programming language
                example: Go
            helloWorldCode:
                type: string
                description: Hello World example code
                example: |-
                    package main

                    import "fmt"

                    func main() {
                        fmt.Println("Hello, World!")
                    }
            id:
                type: string
                description: ID of the programming language
                example: go
            monacoId:
                type: string
                description: Monaco editor ID for the programming language
                example: go
        description: Represents a programming language
        example:
            codeFilename: main.go
            compileCmd: go build
            compiledFilename: main
            enabled: true
            envVersionCmd: go version
            executeCmd: go run
            fullName: Go
            helloWorldCode: |-
                package main

                import "fmt"

                func main() {
                    fmt.Println("Hello, World!")
                }
            id: go
            monacoId: go
        required:
            - id
            - fullName
            - executeCmd
            - envVersionCmd
            - helloWorldCode
            - monacoId
            - enabled
    StInputsResponse:
        title: StInputsResponse
        type: object
        properties:
            inputs:
                type: array
                items:
                    type: string
                    example: Repellendus molestias adipisci qui sequi et.
                description: Inputs for the subtask
                example:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
            subtask:
                type: integer
                description: Subtask number
                example: 1
                format: int64
        description: Represents subtask inputs for a task
        example:
            inputs:
                - |
                  5 5 3
                  A.X..
                  X.B.X
                  ....X
                  XX...
                  X.XXX
                - |
                  6 3 1
                  ...
                  XA.
                  .X.
                  X..
                  B..
                  ...
                - |
                  6 4 2
                  X...
                  .AXX
                  X..X
                  .X.X
                  XXXX
                  X.BX
            subtask: 1
        required:
            - subtask
            - inputs
    StInputsResponseBody:
        title: StInputsResponseBody
        type: object
        properties:
            inputs:
                type: array
                items:
                    type: string
                    example: Vitae et.
                description: Inputs for the subtask
                example:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
            subtask:
                type: integer
                description: Subtask number
                example: 1
                format: int64
        description: Represents subtask inputs for a task
        example:
            inputs:
                - |
                  5 5 3
                  A.X..
                  X.B.X
                  ....X
                  XX...
                  X.XXX
                - |
                  6 3 1
                  ...
                  XA.
                  .X.
                  X..
                  B..
                  ...
                - |
                  6 4 2
                  X...
                  .AXX
                  X..X
                  .X.X
                  XXXX
                  X.BX
            subtask: 1
        required:
            - subtask
            - inputs
    SubmissionResponse:
        title: SubmissionResponse
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Non sit omnis.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponse'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 1061727144106224103
                      subtask_id: 8380668205619652909
                      subtask_score: 4232448705194007563
                      untested_tests: 826488332414275085
                      wrong_tests: 3174053373465644102
                    - accepted_tests: 1061727144106224103
                      subtask_id: 8380668205619652909
                      subtask_score: 4232448705194007563
                      untested_tests: 826488332414275085
                      wrong_tests: 3174053373465644102
                    - accepted_tests: 1061727144106224103
                      subtask_id: 8380668205619652909
                      subtask_score: 4232448705194007563
                      untested_tests: 826488332414275085
                      wrong_tests: 3174053373465644102
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponse'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 1197023012707218426
                      statement_subtask: 7380403459586498932
                      test_group_id: 5955932233362919291
                      test_group_score: 4220435978784164186
                      untested_tests: 1317748648578841930
                      wrong_tests: 2524244840861339404
                    - accepted_tests: 1197023012707218426
                      statement_subtask: 7380403459586498932
                      test_group_id: 5955932233362919291
                      test_group_score: 4220435978784164186
                      untested_tests: 1317748648578841930
                      wrong_tests: 2524244840861339404
                    - accepted_tests: 1197023012707218426
                      statement_subtask: 7380403459586498932
                      test_group_id: 5955932233362919291
                      test_group_score: 4220435978784164186
                      untested_tests: 1317748648578841930
                      wrong_tests: 2524244840861339404
                    - accepted_tests: 1197023012707218426
                      statement_subtask: 7380403459586498932
                      test_group_id: 5955932233362919291
                      test_group_score: 4220435978784164186
                      untested_tests: 1317748648578841930
                      wrong_tests: 2524244840861339404
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponse'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Illo voluptas eos libero cupiditate autem.
            eval_uuid:
                type: string
                description: UUID of the evaluation
                example: Natus ut cum.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Quasi unde eveniet consequatur tempore expedita ut.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Aspernatur magni non molestiae assumenda aspernatur reprehenderit.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Veniam tempora ipsam totam ea repellat repellat.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Ea impedit veritatis vitae eum.
            submission:
                type: string
                description: The code submission
                example: Facere nulla sed.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Rem non dolorem.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Sint non quisquam cupiditate similique.
            username:
                type: string
                description: Username of the user who submitted
                example: Hic quia.
        example:
            created_at: In quis.
            eval_scoring_subtasks:
                - accepted_tests: 1061727144106224103
                  subtask_id: 8380668205619652909
                  subtask_score: 4232448705194007563
                  untested_tests: 826488332414275085
                  wrong_tests: 3174053373465644102
                - accepted_tests: 1061727144106224103
                  subtask_id: 8380668205619652909
                  subtask_score: 4232448705194007563
                  untested_tests: 826488332414275085
                  wrong_tests: 3174053373465644102
            eval_scoring_testgroups:
                - accepted_tests: 1197023012707218426
                  statement_subtask: 7380403459586498932
                  test_group_id: 5955932233362919291
                  test_group_score: 4220435978784164186
                  untested_tests: 1317748648578841930
                  wrong_tests: 2524244840861339404
                - accepted_tests: 1197023012707218426
                  statement_subtask: 7380403459586498932
                  test_group_id: 5955932233362919291
                  test_group_score: 4220435978784164186
                  untested_tests: 1317748648578841930
                  wrong_tests: 2524244840861339404
                - accepted_tests: 1197023012707218426
                  statement_subtask: 7380403459586498932
                  test_group_id: 5955932233362919291
                  test_group_score: 4220435978784164186
                  untested_tests: 1317748648578841930
                  wrong_tests: 2524244840861339404
            eval_scoring_tests:
                accepted: 8867035682599123196
                untested: 7079115659623918585
                wrong: 2665292154090313275
            eval_status: Sint perspiciatis cum quis.
            eval_uuid: Rem sed ipsum.
            p_lang_display_name: Eligendi nostrum et quia dignissimos.
            p_lang_id: Beatae non repudiandae a corporis tenetur.
            p_lang_monaco_id: Nam provident hic.
            subm_uuid: Nihil possimus fugiat et ut et.
            submission: Nihil iusto ex nemo.
            task_id: Sint ad et maiores quia est.
            task_name: Qui aliquam quisquam doloribus aspernatur quia minima.
            username: Rerum aut incidunt.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
            - eval_uuid
    SubmissionResponseBody:
        title: SubmissionResponseBody
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Eligendi quae tempora qui hic quo.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponseBody'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponseBody'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponseBody'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Molestiae ut animi.
            eval_uuid:
                type: string
                description: UUID of the evaluation
                example: Repudiandae distinctio amet et et.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Velit perferendis.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Quod architecto et et adipisci.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Quas id.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Est et iste et placeat consequatur eaque.
            submission:
                type: string
                description: The code submission
                example: Expedita alias eveniet expedita vitae occaecati temporibus.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Exercitationem provident blanditiis est et sint ullam.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Repellat voluptatem voluptatem sed.
            username:
                type: string
                description: Username of the user who submitted
                example: Quis at aut.
        example:
            created_at: Quia ut.
            eval_scoring_subtasks:
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
            eval_scoring_testgroups:
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
            eval_scoring_tests:
                accepted: 4401638572233241483
                untested: 8439219991192523214
                wrong: 3392342282335858688
            eval_status: Eligendi dolor.
            eval_uuid: Quia laborum.
            p_lang_display_name: Ut libero officia doloremque in recusandae rerum.
            p_lang_id: Nisi ut est.
            p_lang_monaco_id: Illo et amet quia voluptate.
            subm_uuid: Aliquam tempore in.
            submission: Ut tenetur rerum provident modi voluptatem odio.
            task_id: Aut est.
            task_name: Sint qui enim mollitia dolorum.
            username: Distinctio ad ex deleniti possimus et.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
            - eval_uuid
    SubmissionStateUpdateResponseBody:
        title: SubmissionStateUpdateResponseBody
        type: object
        properties:
            eval_uuid:
                type: string
                description: UUID of the evaluation
                example: Aut maiores.
            new_state:
                type: string
                description: New state of the submission
                example: Quia in enim aut voluptatem dolor.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Ut qui.
        example:
            eval_uuid: Sit dolor earum labore amet.
            new_state: Sint fugiat sed.
            subm_uuid: Ut laudantium.
        required:
            - subm_uuid
            - new_state
            - eval_uuid
    SubmissionsCreateSubmissionRequestBody:
        title: SubmissionsCreateSubmissionRequestBody
        type: object
        properties:
            programming_lang_id:
                type: string
                description: ID of the programming language
                example: go
            submission:
                type: string
                description: The code submission
                example: print(factorial(5))
            task_code_id:
                type: string
                description: ID of the task
                example: kvadrputekl
            username:
                type: string
                description: Username of the user who submitted
                example: coder123
        example:
            programming_lang_id: go
            submission: print(factorial(5))
            task_code_id: kvadrputekl
            username: coder123
        required:
            - submission
            - username
            - programming_lang_id
            - task_code_id
    SubmissionsCreateSubmissionResponseBody:
        title: SubmissionsCreateSubmissionResponseBody
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Unde voluptas.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponseBody'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponseBody'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponseBody'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Autem fuga quibusdam sunt.
            eval_uuid:
                type: string
                description: UUID of the evaluation
                example: Sint et.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Aperiam omnis.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Eum sit nobis incidunt aliquam ullam.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Eum cum ratione architecto iusto.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Delectus a.
            submission:
                type: string
                description: The code submission
                example: Sequi eveniet non non.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Ea beatae dolor excepturi est.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Qui ut.
            username:
                type: string
                description: Username of the user who submitted
                example: Aut quos aspernatur officiis blanditiis.
        example:
            created_at: Sit non modi quia ipsam eius et.
            eval_scoring_subtasks:
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
            eval_scoring_testgroups:
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
            eval_scoring_tests:
                accepted: 4401638572233241483
                untested: 8439219991192523214
                wrong: 3392342282335858688
            eval_status: Aut est pariatur repudiandae dolores alias.
            eval_uuid: Explicabo error enim reprehenderit nulla.
            p_lang_display_name: Autem est doloribus similique voluptas doloribus illo.
            p_lang_id: Officiis soluta sunt qui.
            p_lang_monaco_id: Rerum qui adipisci occaecati.
            subm_uuid: Ut fugit iusto molestiae.
            submission: Dolores sit in.
            task_id: Itaque ab maxime.
            task_name: Ipsam maxime quia.
            username: Laudantium eaque optio nobis facere.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
            - eval_uuid
    SubmissionsGetSubmissionResponseBody:
        title: SubmissionsGetSubmissionResponseBody
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Eligendi dicta non perferendis provident iusto.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponseBody'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponseBody'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponseBody'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Fugit voluptate reiciendis illum.
            eval_uuid:
                type: string
                description: UUID of the evaluation
                example: Nesciunt sit aut qui laboriosam quia.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Excepturi dolores ullam quia et.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Laudantium odio delectus saepe accusantium.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Laborum sit qui enim.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Sapiente quia.
            submission:
                type: string
                description: The code submission
                example: At id debitis qui et corporis rerum.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Ipsa voluptatibus asperiores.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Reiciendis facilis ut facere aut iusto.
            username:
                type: string
                description: Username of the user who submitted
                example: Vel eaque.
        example:
            created_at: Suscipit culpa.
            eval_scoring_subtasks:
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
                - accepted_tests: 2524123002320840
                  subtask_id: 3815997190531863537
                  subtask_score: 1164447941286999095
                  untested_tests: 4919690584421977662
                  wrong_tests: 8184465610989926589
            eval_scoring_testgroups:
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
                - accepted_tests: 1558140665671054117
                  statement_subtask: 4389630032395887761
                  test_group_id: 8409830294111935840
                  test_group_score: 1664960979858139649
                  untested_tests: 6498697405408565279
                  wrong_tests: 6081030264311576743
            eval_scoring_tests:
                accepted: 4401638572233241483
                untested: 8439219991192523214
                wrong: 3392342282335858688
            eval_status: Sit odit omnis repellendus.
            eval_uuid: Eius architecto corporis illum dolore repellendus.
            p_lang_display_name: Ut at voluptas.
            p_lang_id: Omnis vero cum.
            p_lang_monaco_id: Tempora quia quibusdam quod ea quia.
            subm_uuid: Corporis quae quia iure autem sed.
            submission: Eum asperiores doloribus et iste nulla voluptatem.
            task_id: Soluta aut aut.
            task_name: Autem beatae delectus architecto est.
            username: Et sunt eaque corporis.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
            - eval_uuid
    SubmissionsStreamSubmissionUpdatesResponseBody:
        title: SubmissionsStreamSubmissionUpdatesResponseBody
        type: object
        properties:
            state_update:
                $ref: '#/definitions/SubmissionStateUpdateResponseBody'
            subm_created:
                $ref: '#/definitions/SubmissionResponseBody'
            testgroup_res_update:
                $ref: '#/definitions/TestgroupScoreUpdateResponseBody'
        example:
            state_update:
                eval_uuid: Est ullam aut odit amet molestiae.
                new_state: Deleniti sit consequatur et molestias officiis omnis.
                subm_uuid: Rerum aut dicta molestiae fugiat et.
            subm_created:
                created_at: Ipsam sed nemo vero nostrum.
                eval_scoring_subtasks:
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                    - accepted_tests: 2524123002320840
                      subtask_id: 3815997190531863537
                      subtask_score: 1164447941286999095
                      untested_tests: 4919690584421977662
                      wrong_tests: 8184465610989926589
                eval_scoring_testgroups:
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                    - accepted_tests: 1558140665671054117
                      statement_subtask: 4389630032395887761
                      test_group_id: 8409830294111935840
                      test_group_score: 1664960979858139649
                      untested_tests: 6498697405408565279
                      wrong_tests: 6081030264311576743
                eval_scoring_tests:
                    accepted: 4401638572233241483
                    untested: 8439219991192523214
                    wrong: 3392342282335858688
                eval_status: Quo ut eos non consequatur.
                eval_uuid: Maiores ea repellendus non.
                p_lang_display_name: Consequatur laboriosam alias ut nam est sit.
                p_lang_id: Et dolorum commodi ipsam enim et.
                p_lang_monaco_id: Autem maiores deleniti delectus delectus.
                subm_uuid: Id modi voluptatibus eos.
                submission: Non esse incidunt quo eveniet cum consectetur.
                task_id: Perspiciatis hic occaecati voluptas quaerat modi.
                task_name: Temporibus doloremque quisquam aspernatur repellat.
                username: Ea fuga omnis nihil et.
            testgroup_res_update:
                accepted_tests: 7409820282880422768
                eval_uuid: Id ut id molestiae illo.
                subm_uuid: Error facere quis iure assumenda numquam officia.
                test_group_id: 2868456470534353623
                untested_tests: 8736898891923357999
                wrong_tests: 2024748454163110625
    SubtaskResultResponse:
        title: SubtaskResultResponse
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 6669594473094201827
                format: int64
            subtask_id:
                type: integer
                description: ID of the subtask
                example: 4997093775493336729
                format: int64
            subtask_score:
                type: integer
                description: Score of the subtask
                example: 9192207805017678769
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 4500341591108722488
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 474544028920332410
                format: int64
        example:
            accepted_tests: 7631848019233278959
            subtask_id: 2827109795894021778
            subtask_score: 9060475433526044920
            untested_tests: 7407141686949653305
            wrong_tests: 8908067696396668901
        required:
            - subtask_id
            - subtask_score
            - accepted_tests
            - wrong_tests
            - untested_tests
    SubtaskResultResponseBody:
        title: SubtaskResultResponseBody
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 1997250676841213612
                format: int64
            subtask_id:
                type: integer
                description: ID of the subtask
                example: 1110633425801091880
                format: int64
            subtask_score:
                type: integer
                description: Score of the subtask
                example: 5458538501693646188
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 6021826861501837781
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 6405073023675590451
                format: int64
        example:
            accepted_tests: 6228484555631348392
            subtask_id: 5194029293197574426
            subtask_score: 6913173445465812434
            untested_tests: 724774361254274767
            wrong_tests: 5318941345947308392
        required:
            - subtask_id
            - subtask_score
            - accepted_tests
            - wrong_tests
            - untested_tests
    TaskResponse:
        title: TaskResponse
        type: object
        properties:
            cpu_time_limit_seconds:
                type: number
                description: CPU time limit in seconds
                example: 0.5
                format: double
            default_md_statement:
                $ref: '#/definitions/MarkdownStatementResponse'
            default_pdf_statement_url:
                type: string
                description: URL of the default PDF statement
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating:
                type: integer
                description: Difficulty rating of the task
                example: 3
                enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                format: int64
            examples:
                type: array
                items:
                    $ref: '#/definitions/ExampleResponse'
                description: Examples for the task
                example:
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Eum pariatur velit quia.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Eum pariatur velit quia.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Eum pariatur velit quia.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Eum pariatur velit quia.
                      output: |
                        10
            illustration_img_url:
                type: string
                description: URL of the illustration image
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes:
                type: integer
                description: Memory limit in megabytes
                example: 256
                format: int64
            origin_notes:
                type: object
                description: Origin notes for the task
                example:
                    lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
                additionalProperties:
                    type: string
                    example: Aut illo voluptas dignissimos repudiandae et.
            origin_olympiad:
                type: string
                description: Origin olympiad of the task
                example: LIO
            published_task_id:
                type: string
                description: ID of the published task
                example: kvadrputekl
            task_full_name:
                type: string
                description: Full name of the task
                example: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                type: array
                items:
                    $ref: '#/definitions/StInputsResponse'
                description: Visible input subtasks
                example:
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
        description: Represents a competitive programming task
        example:
            cpu_time_limit_seconds: 0.5
            default_md_statement:
                input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
                notes: Quo delectus rerum necessitatibus delectus et.
                output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
                scoring: Et aspernatur fugit.
                story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
            default_pdf_statement_url: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating: 3
            examples:
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Eum pariatur velit quia.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Eum pariatur velit quia.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Eum pariatur velit quia.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Eum pariatur velit quia.
                  output: |
                    10
            illustration_img_url: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes: 256
            origin_notes:
                lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
            origin_olympiad: LIO
            published_task_id: kvadrputekl
            task_full_name: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
        required:
            - published_task_id
            - task_full_name
            - memory_limit_megabytes
            - cpu_time_limit_seconds
            - origin_olympiad
            - difficulty_rating
    TasksGetTaskResponseBody:
        title: TasksGetTaskResponseBody
        type: object
        properties:
            cpu_time_limit_seconds:
                type: number
                description: CPU time limit in seconds
                example: 0.5
                format: double
            default_md_statement:
                $ref: '#/definitions/MarkdownStatementResponseBody'
            default_pdf_statement_url:
                type: string
                description: URL of the default PDF statement
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating:
                type: integer
                description: Difficulty rating of the task
                example: 3
                enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                format: int64
            examples:
                type: array
                items:
                    $ref: '#/definitions/ExampleResponseBody'
                description: Examples for the task
                example:
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Tenetur temporibus harum assumenda.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Tenetur temporibus harum assumenda.
                      output: |
                        10
            illustration_img_url:
                type: string
                description: URL of the illustration image
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes:
                type: integer
                description: Memory limit in megabytes
                example: 256
                format: int64
            origin_notes:
                type: object
                description: Origin notes for the task
                example:
                    lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
                additionalProperties:
                    type: string
                    example: Optio quo id et necessitatibus magni autem.
            origin_olympiad:
                type: string
                description: Origin olympiad of the task
                example: LIO
            published_task_id:
                type: string
                description: ID of the published task
                example: kvadrputekl
            task_full_name:
                type: string
                description: Full name of the task
                example: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                type: array
                items:
                    $ref: '#/definitions/StInputsResponseBody'
                description: Visible input subtasks
                example:
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
        example:
            cpu_time_limit_seconds: 0.5
            default_md_statement:
                input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
                notes: Quam est repudiandae.
                output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
                scoring: Quo at.
                story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
            default_pdf_statement_url: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating: 3
            examples:
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Tenetur temporibus harum assumenda.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Tenetur temporibus harum assumenda.
                  output: |
                    10
            illustration_img_url: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes: 256
            origin_notes:
                lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
            origin_olympiad: LIO
            published_task_id: kvadrputekl
            task_full_name: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
        required:
            - published_task_id
            - task_full_name
            - memory_limit_megabytes
            - cpu_time_limit_seconds
            - origin_olympiad
            - difficulty_rating
    TestGroupResultResponse:
        title: TestGroupResultResponse
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 4182886058047212094
                format: int64
            statement_subtask:
                type: integer
                description: Statement subtask
                example: 3477093095148565804
                format: int64
            test_group_id:
                type: integer
                description: ID of the test group
                example: 1961969177032172753
                format: int64
            test_group_score:
                type: integer
                description: Score of the test group
                example: 330596274620518218
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 1565661209327856290
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 1479549113723039711
                format: int64
        example:
            accepted_tests: 8036747345805335239
            statement_subtask: 6107291508476225675
            test_group_id: 5097354851782123508
            test_group_score: 1722458100900655918
            untested_tests: 3365130913189702284
            wrong_tests: 8137349426488053777
        required:
            - test_group_id
            - test_group_score
            - statement_subtask
            - accepted_tests
            - wrong_tests
            - untested_tests
    TestGroupResultResponseBody:
        title: TestGroupResultResponseBody
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 8858195169480252262
                format: int64
            statement_subtask:
                type: integer
                description: Statement subtask
                example: 5539742536539017847
                format: int64
            test_group_id:
                type: integer
                description: ID of the test group
                example: 1560744677294678597
                format: int64
            test_group_score:
                type: integer
                description: Score of the test group
                example: 4346437879039791365
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 6343844629412818719
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 3411123774126533742
                format: int64
        example:
            accepted_tests: 2812299617994635766
            statement_subtask: 6359100421257944120
            test_group_id: 2472923165088459209
            test_group_score: 7736993225338320097
            untested_tests: 2760528595163296319
            wrong_tests: 5305036420635614281
        required:
            - test_group_id
            - test_group_score
            - statement_subtask
            - accepted_tests
            - wrong_tests
            - untested_tests
    TestgroupScoreUpdateResponseBody:
        title: TestgroupScoreUpdateResponseBody
        type: object
        properties:
            accepted_tests:
                type: integer
                example: 5685311884609161457
                format: int64
            eval_uuid:
                type: string
                example: Recusandae cum hic vel nesciunt esse nemo.
            subm_uuid:
                type: string
                example: Voluptate molestiae officia totam sit porro.
            test_group_id:
                type: integer
                example: 6372143044617848805
                format: int64
            untested_tests:
                type: integer
                example: 7269993074199505690
                format: int64
            wrong_tests:
                type: integer
                example: 6824618116566897874
                format: int64
        example:
            accepted_tests: 5574341143985949077
            eval_uuid: Aut dolores perspiciatis debitis quo et quaerat.
            subm_uuid: Illum natus itaque accusantium.
            test_group_id: 1495632466622569375
            untested_tests: 7264340976954118971
            wrong_tests: 736169680693899573
        required:
            - subm_uuid
            - eval_uuid
            - accepted_tests
            - wrong_tests
            - untested_tests
            - test_group_id
    TestsResultResponse:
        title: TestsResultResponse
        type: object
        properties:
            accepted:
                type: integer
                description: Number of accepted tests
                example: 7263619966080841056
                format: int64
            untested:
                type: integer
                description: Number of untested tests
                example: 3066123200948061058
                format: int64
            wrong:
                type: integer
                description: Number of wrong tests
                example: 8276098453717850096
                format: int64
        example:
            accepted: 4835405545693259419
            untested: 6966530128300552612
            wrong: 4893363946894601893
        required:
            - accepted
            - wrong
            - untested
    TestsResultResponseBody:
        title: TestsResultResponseBody
        type: object
        properties:
            accepted:
                type: integer
                description: Number of accepted tests
                example: 3714240805071084463
                format: int64
            untested:
                type: integer
                description: Number of untested tests
                example: 8476565198932655189
                format: int64
            wrong:
                type: integer
                description: Number of wrong tests
                example: 4470438659502700200
                format: int64
        example:
            accepted: 3497725713534783153
            untested: 4769693870415153005
            wrong: 1263055568589522164
        required:
            - accepted
            - wrong
            - untested
    UsersCreateUserRequestBody:
        title: UsersCreateUserRequestBody
        type: object
        properties:
            email:
                type: string
                description: Email of the user
                example: johndoe@example.com
                format: email
            firstname:
                type: string
                description: First name of the user
                example: John
            lastname:
                type: string
                description: Last name of the user
                example: Doe
            password:
                type: string
                description: Password of the user
                example: password123
            username:
                type: string
                description: Username of the user
                example: johndoe
        example:
            email: johndoe@example.com
            firstname: John
            lastname: Doe
            password: password123
            username: johndoe
        required:
            - username
            - email
            - firstname
            - lastname
            - password
    UsersCreateUserResponseBody:
        title: UsersCreateUserResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email of the user
                example: johndoe@example.com
                format: email
            firstname:
                type: string
                description: First name of the user
                example: John
            lastname:
                type: string
                description: Last name of the user
                example: Doe
            username:
                type: string
                description: Username of the user
                example: johndoe
            uuid:
                type: string
                description: Unique user UUID
                example: 550e8400-e29b-41d4-a716-446655440000
        example:
            email: johndoe@example.com
            firstname: John
            lastname: Doe
            username: johndoe
            uuid: 550e8400-e29b-41d4-a716-446655440000
        required:
            - uuid
            - username
            - email
            - firstname
            - lastname
    UsersGetUserResponseBody:
        title: UsersGetUserResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email of the user
                example: johndoe@example.com
                format: email
            firstname:
                type: string
                description: First name of the user
                example: John
            lastname:
                type: string
                description: Last name of the user
                example: Doe
            username:
                type: string
                description: Username of the user
                example: johndoe
            uuid:
                type: string
                description: Unique user UUID
                example: 550e8400-e29b-41d4-a716-446655440000
        example:
            email: johndoe@example.com
            firstname: John
            lastname: Doe
            username: johndoe
            uuid: 550e8400-e29b-41d4-a716-446655440000
        required:
            - uuid
            - username
            - email
            - firstname
            - lastname
    UsersLoginRequestBody:
        title: UsersLoginRequestBody
        type: object
        properties:
            password:
                type: string
                description: Password of the user
                example: password123
            username:
                type: string
                description: Username of the user
                example: johndoe
        example:
            password: password123
            username: johndoe
        required:
            - username
            - password
    UsersQueryCurrentJWTResponseBody:
        title: UsersQueryCurrentJWTResponseBody
        type: object
        properties:
            audience:
                type: array
                items:
                    type: string
                    example: Deserunt consequatur non fuga quis incidunt.
                example:
                    - Eius dolorem eum et.
                    - Fuga ullam.
                    - Quos consequatur aut ex fuga temporibus.
            email:
                type: string
                example: Omnis ratione.
            expires_at:
                type: string
                example: Delectus labore reiciendis culpa at esse.
            firstname:
                type: string
                example: Deserunt eaque deleniti blanditiis.
            issued_at:
                type: string
                example: Atque molestiae distinctio atque.
            issuer:
                type: string
                example: Inventore est nobis ducimus veniam quaerat cum.
            lastname:
                type: string
                example: Ea officia rerum qui aliquam.
            not_before:
                type: string
                example: Esse praesentium accusantium quia.
            scopes:
                type: array
                items:
                    type: string
                    example: Omnis architecto consequatur.
                example:
                    - Corporis autem molestias perferendis modi.
                    - Maxime magni quis vitae officia.
                    - Maiores et et maiores.
            subject:
                type: string
                example: Omnis sequi perspiciatis cum.
            username:
                type: string
                example: Ut dolor molestiae.
            uuid:
                type: string
                example: Qui amet atque ea occaecati molestias quia.
        example:
            audience:
                - Molestiae est non est ea praesentium.
                - Facilis ipsam sed est facere voluptatem.
            email: Vero voluptatem.
            expires_at: Vel quam dolorum autem.
            firstname: Non et commodi deleniti quos omnis iure.
            issued_at: Et voluptate et sed.
            issuer: Quia labore iusto et magnam magni numquam.
            lastname: Illo mollitia eius adipisci.
            not_before: Dolorem omnis rerum.
            scopes:
                - Voluptas dolore voluptatem aut ut nobis.
                - Placeat et.
                - Cupiditate consequatur dolorum velit dolore ut et.
                - Minima veritatis necessitatibus.
            subject: Quia facilis voluptatibus quia.
            username: Quos dolor.
            uuid: A eius delectus cumque aut repellat.
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: |4-
            **Security Scopes**:
              * `users:read`: Read users
              * `users:write`: Write users
        name: Authorization
        in: header
    jwt_query_Authorization:
        type: apiKey
        description: |4-
            **Security Scopes**:
              * `users:read`: Read users
              * `users:write`: Write users
        name: Authorization
        in: query
