swagger: "2.0"
info:
    title: Programme.lv backend
    description: Service for managing users, tasks, and submissions.
    version: 0.0.1
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /auth/current/jwt:
        get:
            tags:
                - users
            summary: queryCurrentJWT users
            description: Query current JWT
            operationId: users#queryCurrentJWT
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used for authentication
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersQueryCurrentJWTResponseBody'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /auth/login:
        post:
            tags:
                - users
            summary: login users
            description: User login
            operationId: users#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UsersLoginRequestBody'
                    required:
                        - username
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
    /programming-languages:
        get:
            tags:
                - submissions
            summary: listProgrammingLanguages submissions
            description: List all available programming languages
            operationId: submissions#listProgrammingLanguages
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ProgrammingLangResponse'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
    /submissions:
        get:
            tags:
                - submissions
            summary: listSubmissions submissions
            description: List all submissions
            operationId: submissions#listSubmissions
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/SubmissionResponse'
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
        post:
            tags:
                - submissions
            summary: createSubmission submissions
            description: Create a new submission
            operationId: submissions#createSubmission
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used for authentication
                  required: true
                  type: string
                - name: CreateSubmissionRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/SubmissionsCreateSubmissionRequestBody'
                    required:
                        - submission
                        - username
                        - programming_lang_id
                        - task_code_id
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/SubmissionsCreateSubmissionResponseBody'
                        required:
                            - subm_uuid
                            - submission
                            - username
                            - created_at
                            - eval_status
                            - p_lang_id
                            - p_lang_display_name
                            - p_lang_monaco_id
                            - task_name
                            - task_id
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /submissions/{uuid}:
        get:
            tags:
                - submissions
            summary: getSubmission submissions
            description: Get a submission by UUID
            operationId: submissions#getSubmission
            parameters:
                - name: uuid
                  in: path
                  description: UUID of the submission
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SubmissionsGetSubmissionResponseBody'
                        required:
                            - subm_uuid
                            - submission
                            - username
                            - created_at
                            - eval_status
                            - p_lang_id
                            - p_lang_display_name
                            - p_lang_monaco_id
                            - task_name
                            - task_id
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        type: string
            schemes:
                - http
    /tasks:
        get:
            tags:
                - tasks
            summary: listTasks tasks
            description: List all tasks
            operationId: tasks#listTasks
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TaskResponse'
                "404":
                    description: Not Found response.
                    schema:
                        type: string
            schemes:
                - http
    /tasks/{task_id}:
        get:
            tags:
                - tasks
            summary: getTask tasks
            description: Get a task by its ID
            operationId: tasks#getTask
            parameters:
                - name: task_id
                  in: path
                  description: ID of the task
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TasksGetTaskResponseBody'
                        required:
                            - published_task_id
                            - task_full_name
                            - memory_limit_megabytes
                            - cpu_time_limit_seconds
                            - origin_olympiad
                            - difficulty_rating
                "404":
                    description: Not Found response.
                    schema:
                        type: string
            schemes:
                - http
    /users:
        post:
            tags:
                - users
            summary: createUser users
            description: Create a new user
            operationId: users#createUser
            parameters:
                - name: CreateUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UsersCreateUserRequestBody'
                    required:
                        - username
                        - email
                        - firstname
                        - lastname
                        - password
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/UsersCreateUserResponseBody'
                        required:
                            - uuid
                            - username
                            - email
                            - firstname
                            - lastname
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
    /users/{uuid}:
        get:
            tags:
                - users
            summary: getUser users
            description: |-
                Get a user by UUID

                **Required security scopes for jwt**:
                  * `users:read`
            operationId: users#getUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  required: true
                  type: string
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersGetUserResponseBody'
                        required:
                            - uuid
                            - username
                            - email
                            - firstname
                            - lastname
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_query_Authorization: []
        delete:
            tags:
                - users
            summary: deleteUser users
            description: |-
                Delete a user

                **Required security scopes for jwt**:
                  * `users:write`
            operationId: users#deleteUser
            parameters:
                - name: Authorization
                  in: query
                  description: JWT token used for authentication
                  required: true
                  type: string
                - name: uuid
                  in: path
                  description: UUID of the user
                  required: true
                  type: string
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: Bad Request response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "404":
                    description: Not Found response.
                    schema:
                        type: string
                "409":
                    description: Conflict response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_query_Authorization: []
definitions:
    ExampleResponse:
        title: ExampleResponse
        type: object
        properties:
            input:
                type: string
                description: Example input
                example: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
            md_note:
                type: string
                description: Markdown note for the example
                example: Natus ut cum.
            output:
                type: string
                description: Example output
                example: |
                    10
        description: Represents an example for a task
        example:
            input: |
                5 9 3
                A....X..B
                ..X..X.X.
                .XXX.XX..
                X.X.X..X.
                ...XX....
            md_note: Illo voluptas eos libero cupiditate autem.
            output: |
                10
        required:
            - input
            - output
    ExampleResponseBody:
        title: ExampleResponseBody
        type: object
        properties:
            input:
                type: string
                description: Example input
                example: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
            md_note:
                type: string
                description: Markdown note for the example
                example: Ipsam totam ea repellat.
            output:
                type: string
                description: Example output
                example: |
                    10
        description: Represents an example for a task
        example:
            input: |
                5 9 3
                A....X..B
                ..X..X.X.
                .XXX.XX..
                X.X.X..X.
                ...XX....
            md_note: In sint non quisquam.
            output: |
                10
        required:
            - input
            - output
    MarkdownStatementResponse:
        title: MarkdownStatementResponse
        type: object
        properties:
            input:
                type: string
                description: Input section of the markdown statement
                example: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes:
                type: string
                description: Notes section of the markdown statement
                example: Quia velit itaque ab.
            output:
                type: string
                description: Output section of the markdown statement
                example: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring:
                type: string
                description: Scoring section of the markdown statement
                example: Similique ea impedit veritatis.
            story:
                type: string
                description: Story section of the markdown statement
                example: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        description: Represents a markdown statement for a task
        example:
            input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes: Eum et facere nulla.
            output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring: Doloribus hic quia voluptatibus non sit omnis.
            story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        required:
            - story
            - input
            - output
    MarkdownStatementResponseBody:
        title: MarkdownStatementResponseBody
        type: object
        properties:
            input:
                type: string
                description: Input section of the markdown statement
                example: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes:
                type: string
                description: Notes section of the markdown statement
                example: Vero deleniti consequuntur ad omnis autem tenetur.
            output:
                type: string
                description: Output section of the markdown statement
                example: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring:
                type: string
                description: Scoring section of the markdown statement
                example: Sed autem aspernatur magni non molestiae.
            story:
                type: string
                description: Story section of the markdown statement
                example: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        description: Represents a markdown statement for a task
        example:
            input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
            notes: Aspernatur reprehenderit distinctio quasi unde eveniet consequatur.
            output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
            scoring: Expedita ut autem veniam.
            story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
        required:
            - story
            - input
            - output
    ProgrammingLangResponse:
        title: ProgrammingLangResponse
        type: object
        properties:
            codeFilename:
                type: string
                description: Default code filename for the language
                example: main.go
            compileCmd:
                type: string
                description: Compilation command for the language
                example: go build
            compiledFilename:
                type: string
                description: Name of the compiled output file
                example: main
            enabled:
                type: boolean
                description: Whether the language is enabled
                example: true
            envVersionCmd:
                type: string
                description: Command to get environment version
                example: go version
            executeCmd:
                type: string
                description: Execution command for the language
                example: go run
            fullName:
                type: string
                description: Full name of the programming language
                example: Go
            helloWorldCode:
                type: string
                description: Hello World example code
                example: |-
                    package main

                    import "fmt"

                    func main() {
                        fmt.Println("Hello, World!")
                    }
            id:
                type: string
                description: ID of the programming language
                example: go
            monacoId:
                type: string
                description: Monaco editor ID for the programming language
                example: go
        description: Represents a programming language
        example:
            codeFilename: main.go
            compileCmd: go build
            compiledFilename: main
            enabled: true
            envVersionCmd: go version
            executeCmd: go run
            fullName: Go
            helloWorldCode: |-
                package main

                import "fmt"

                func main() {
                    fmt.Println("Hello, World!")
                }
            id: go
            monacoId: go
        required:
            - id
            - fullName
            - executeCmd
            - envVersionCmd
            - helloWorldCode
            - monacoId
            - enabled
    StInputsResponse:
        title: StInputsResponse
        type: object
        properties:
            inputs:
                type: array
                items:
                    type: string
                    example: Hic qui quia aut consequatur dolorem aut.
                description: Inputs for the subtask
                example:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
            subtask:
                type: integer
                description: Subtask number
                example: 1
                format: int64
        description: Represents subtask inputs for a task
        example:
            inputs:
                - |
                  5 5 3
                  A.X..
                  X.B.X
                  ....X
                  XX...
                  X.XXX
                - |
                  6 3 1
                  ...
                  XA.
                  .X.
                  X..
                  B..
                  ...
                - |
                  6 4 2
                  X...
                  .AXX
                  X..X
                  .X.X
                  XXXX
                  X.BX
            subtask: 1
        required:
            - subtask
            - inputs
    StInputsResponseBody:
        title: StInputsResponseBody
        type: object
        properties:
            inputs:
                type: array
                items:
                    type: string
                    example: Possimus fugiat et ut et deleniti.
                description: Inputs for the subtask
                example:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
            subtask:
                type: integer
                description: Subtask number
                example: 1
                format: int64
        description: Represents subtask inputs for a task
        example:
            inputs:
                - |
                  5 5 3
                  A.X..
                  X.B.X
                  ....X
                  XX...
                  X.XXX
                - |
                  6 3 1
                  ...
                  XA.
                  .X.
                  X..
                  B..
                  ...
                - |
                  6 4 2
                  X...
                  .AXX
                  X..X
                  .X.X
                  XXXX
                  X.BX
            subtask: 1
        required:
            - subtask
            - inputs
    SubmissionResponse:
        title: SubmissionResponse
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Officia voluptatem dignissimos.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponse'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 3783849246656928445
                      subtask_id: 862290211100774827
                      subtask_score: 5932063920578939640
                      untested_tests: 6608146232810955738
                      wrong_tests: 4986450916902163310
                    - accepted_tests: 3783849246656928445
                      subtask_id: 862290211100774827
                      subtask_score: 5932063920578939640
                      untested_tests: 6608146232810955738
                      wrong_tests: 4986450916902163310
                    - accepted_tests: 3783849246656928445
                      subtask_id: 862290211100774827
                      subtask_score: 5932063920578939640
                      untested_tests: 6608146232810955738
                      wrong_tests: 4986450916902163310
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponse'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 2399424557420764555
                      statement_subtask: 4065762078146389525
                      test_group_id: 7394126715431757918
                      test_group_score: 6464129349315505801
                      untested_tests: 4232154079196505659
                      wrong_tests: 4958692635995674076
                    - accepted_tests: 2399424557420764555
                      statement_subtask: 4065762078146389525
                      test_group_id: 7394126715431757918
                      test_group_score: 6464129349315505801
                      untested_tests: 4232154079196505659
                      wrong_tests: 4958692635995674076
                    - accepted_tests: 2399424557420764555
                      statement_subtask: 4065762078146389525
                      test_group_id: 7394126715431757918
                      test_group_score: 6464129349315505801
                      untested_tests: 4232154079196505659
                      wrong_tests: 4958692635995674076
                    - accepted_tests: 2399424557420764555
                      statement_subtask: 4065762078146389525
                      test_group_id: 7394126715431757918
                      test_group_score: 6464129349315505801
                      untested_tests: 4232154079196505659
                      wrong_tests: 4958692635995674076
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponse'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Tempora unde.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Autem repudiandae ut nostrum quod corporis repellendus.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Voluptatem iure ab.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Architecto et.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Quidem laborum voluptas.
            submission:
                type: string
                description: The code submission
                example: Consequatur a et qui.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Soluta architecto.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Sint sed itaque.
            username:
                type: string
                description: Username of the user who submitted
                example: Laudantium saepe omnis asperiores ut ipsa consequatur.
        example:
            created_at: Beatae similique.
            eval_scoring_subtasks:
                - accepted_tests: 3783849246656928445
                  subtask_id: 862290211100774827
                  subtask_score: 5932063920578939640
                  untested_tests: 6608146232810955738
                  wrong_tests: 4986450916902163310
                - accepted_tests: 3783849246656928445
                  subtask_id: 862290211100774827
                  subtask_score: 5932063920578939640
                  untested_tests: 6608146232810955738
                  wrong_tests: 4986450916902163310
                - accepted_tests: 3783849246656928445
                  subtask_id: 862290211100774827
                  subtask_score: 5932063920578939640
                  untested_tests: 6608146232810955738
                  wrong_tests: 4986450916902163310
                - accepted_tests: 3783849246656928445
                  subtask_id: 862290211100774827
                  subtask_score: 5932063920578939640
                  untested_tests: 6608146232810955738
                  wrong_tests: 4986450916902163310
            eval_scoring_testgroups:
                - accepted_tests: 2399424557420764555
                  statement_subtask: 4065762078146389525
                  test_group_id: 7394126715431757918
                  test_group_score: 6464129349315505801
                  untested_tests: 4232154079196505659
                  wrong_tests: 4958692635995674076
                - accepted_tests: 2399424557420764555
                  statement_subtask: 4065762078146389525
                  test_group_id: 7394126715431757918
                  test_group_score: 6464129349315505801
                  untested_tests: 4232154079196505659
                  wrong_tests: 4958692635995674076
            eval_scoring_tests:
                accepted: 5423225749750281152
                untested: 47598614444753283
                wrong: 8138009116053967692
            eval_status: Quam illo id.
            p_lang_display_name: Blanditiis sequi eveniet.
            p_lang_id: Omnis et recusandae quo delectus.
            p_lang_monaco_id: Non et.
            subm_uuid: Maxime quis qui expedita sed deserunt consequatur.
            submission: Delectus iste autem.
            task_id: Sint et.
            task_name: Quos aspernatur officiis blanditiis eius unde voluptas.
            username: Animi aut eligendi.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
    SubmissionsCreateSubmissionRequestBody:
        title: SubmissionsCreateSubmissionRequestBody
        type: object
        properties:
            programming_lang_id:
                type: string
                description: ID of the programming language
                example: go
            submission:
                type: string
                description: The code submission
                example: print(factorial(5))
            task_code_id:
                type: string
                description: ID of the task
                example: kvadrputekl
            username:
                type: string
                description: Username of the user who submitted
                example: coder123
        example:
            programming_lang_id: go
            submission: print(factorial(5))
            task_code_id: kvadrputekl
            username: coder123
        required:
            - submission
            - username
            - programming_lang_id
            - task_code_id
    SubmissionsCreateSubmissionResponseBody:
        title: SubmissionsCreateSubmissionResponseBody
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Laudantium qui labore corrupti.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponseBody'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 7720553144753357615
                      subtask_id: 9167221839465390447
                      subtask_score: 1408663125023114345
                      untested_tests: 3775575383567604714
                      wrong_tests: 5744809029649609504
                    - accepted_tests: 7720553144753357615
                      subtask_id: 9167221839465390447
                      subtask_score: 1408663125023114345
                      untested_tests: 3775575383567604714
                      wrong_tests: 5744809029649609504
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponseBody'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 5715237542301360531
                      statement_subtask: 8883933417640871930
                      test_group_id: 4853875059777515226
                      test_group_score: 8790711861458765932
                      untested_tests: 4032304587011601647
                      wrong_tests: 2946795653221984534
                    - accepted_tests: 5715237542301360531
                      statement_subtask: 8883933417640871930
                      test_group_id: 4853875059777515226
                      test_group_score: 8790711861458765932
                      untested_tests: 4032304587011601647
                      wrong_tests: 2946795653221984534
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponseBody'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Hic esse amet voluptatem quia cumque.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Qui numquam.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Facilis incidunt.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Ut iste alias minus nobis doloremque dolorem.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Doloremque est et illum eveniet.
            submission:
                type: string
                description: The code submission
                example: Aut a nihil blanditiis deserunt.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Voluptatum molestiae qui amet quod enim ipsum.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Ratione quo labore.
            username:
                type: string
                description: Username of the user who submitted
                example: Laborum quia repellat voluptatem quia voluptas.
        example:
            created_at: Est dolorum quaerat qui.
            eval_scoring_subtasks:
                - accepted_tests: 7720553144753357615
                  subtask_id: 9167221839465390447
                  subtask_score: 1408663125023114345
                  untested_tests: 3775575383567604714
                  wrong_tests: 5744809029649609504
                - accepted_tests: 7720553144753357615
                  subtask_id: 9167221839465390447
                  subtask_score: 1408663125023114345
                  untested_tests: 3775575383567604714
                  wrong_tests: 5744809029649609504
                - accepted_tests: 7720553144753357615
                  subtask_id: 9167221839465390447
                  subtask_score: 1408663125023114345
                  untested_tests: 3775575383567604714
                  wrong_tests: 5744809029649609504
                - accepted_tests: 7720553144753357615
                  subtask_id: 9167221839465390447
                  subtask_score: 1408663125023114345
                  untested_tests: 3775575383567604714
                  wrong_tests: 5744809029649609504
            eval_scoring_testgroups:
                - accepted_tests: 5715237542301360531
                  statement_subtask: 8883933417640871930
                  test_group_id: 4853875059777515226
                  test_group_score: 8790711861458765932
                  untested_tests: 4032304587011601647
                  wrong_tests: 2946795653221984534
                - accepted_tests: 5715237542301360531
                  statement_subtask: 8883933417640871930
                  test_group_id: 4853875059777515226
                  test_group_score: 8790711861458765932
                  untested_tests: 4032304587011601647
                  wrong_tests: 2946795653221984534
                - accepted_tests: 5715237542301360531
                  statement_subtask: 8883933417640871930
                  test_group_id: 4853875059777515226
                  test_group_score: 8790711861458765932
                  untested_tests: 4032304587011601647
                  wrong_tests: 2946795653221984534
                - accepted_tests: 5715237542301360531
                  statement_subtask: 8883933417640871930
                  test_group_id: 4853875059777515226
                  test_group_score: 8790711861458765932
                  untested_tests: 4032304587011601647
                  wrong_tests: 2946795653221984534
            eval_scoring_tests:
                accepted: 3785261307906550490
                untested: 4223040205366050515
                wrong: 4062866428432752107
            eval_status: Et dolorum suscipit.
            p_lang_display_name: Ea dolores sequi atque consectetur aliquam.
            p_lang_id: Tenetur provident possimus.
            p_lang_monaco_id: Et ut similique fugiat harum corporis voluptas.
            subm_uuid: Quod molestiae.
            submission: Aliquam et sunt officia consequatur quia cum.
            task_id: Et voluptate recusandae et perferendis modi.
            task_name: Quisquam ut eaque sunt amet voluptatem est.
            username: Quia debitis.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
    SubmissionsGetSubmissionResponseBody:
        title: SubmissionsGetSubmissionResponseBody
        type: object
        properties:
            created_at:
                type: string
                description: Creation time of the submission
                example: Consequatur aut nostrum enim molestiae doloremque iusto.
            eval_scoring_subtasks:
                type: array
                items:
                    $ref: '#/definitions/SubtaskResultResponseBody'
                description: Scoring / results of the subtasks
                example:
                    - accepted_tests: 7720553144753357615
                      subtask_id: 9167221839465390447
                      subtask_score: 1408663125023114345
                      untested_tests: 3775575383567604714
                      wrong_tests: 5744809029649609504
                    - accepted_tests: 7720553144753357615
                      subtask_id: 9167221839465390447
                      subtask_score: 1408663125023114345
                      untested_tests: 3775575383567604714
                      wrong_tests: 5744809029649609504
            eval_scoring_testgroups:
                type: array
                items:
                    $ref: '#/definitions/TestGroupResultResponseBody'
                description: Scoring / results of the test groups
                example:
                    - accepted_tests: 5715237542301360531
                      statement_subtask: 8883933417640871930
                      test_group_id: 4853875059777515226
                      test_group_score: 8790711861458765932
                      untested_tests: 4032304587011601647
                      wrong_tests: 2946795653221984534
                    - accepted_tests: 5715237542301360531
                      statement_subtask: 8883933417640871930
                      test_group_id: 4853875059777515226
                      test_group_score: 8790711861458765932
                      untested_tests: 4032304587011601647
                      wrong_tests: 2946795653221984534
                    - accepted_tests: 5715237542301360531
                      statement_subtask: 8883933417640871930
                      test_group_id: 4853875059777515226
                      test_group_score: 8790711861458765932
                      untested_tests: 4032304587011601647
                      wrong_tests: 2946795653221984534
            eval_scoring_tests:
                $ref: '#/definitions/TestsResultResponseBody'
            eval_status:
                type: string
                description: Status of the current evaluation
                example: Soluta dignissimos impedit dolores quis voluptas.
            p_lang_display_name:
                type: string
                description: Display name of the programming language
                example: Aperiam omnis.
            p_lang_id:
                type: string
                description: ID of the programming language
                example: Eum sit nobis incidunt aliquam ullam.
            p_lang_monaco_id:
                type: string
                description: Monaco editor ID for the programming language
                example: Eum cum ratione architecto iusto.
            subm_uuid:
                type: string
                description: UUID of the submission
                example: Autem fuga quibusdam sunt.
            submission:
                type: string
                description: The code submission
                example: Atque enim consequatur aperiam quis.
            task_id:
                type: string
                description: Code of the task associated with the submission
                example: Ea beatae dolor excepturi est.
            task_name:
                type: string
                description: Name of the task associated with the submission
                example: Qui ut.
            username:
                type: string
                description: Username of the user who submitted
                example: Placeat velit eum ut libero fugiat.
        example:
            created_at: Sit non modi quia ipsam eius et.
            eval_scoring_subtasks:
                - accepted_tests: 7720553144753357615
                  subtask_id: 9167221839465390447
                  subtask_score: 1408663125023114345
                  untested_tests: 3775575383567604714
                  wrong_tests: 5744809029649609504
                - accepted_tests: 7720553144753357615
                  subtask_id: 9167221839465390447
                  subtask_score: 1408663125023114345
                  untested_tests: 3775575383567604714
                  wrong_tests: 5744809029649609504
            eval_scoring_testgroups:
                - accepted_tests: 5715237542301360531
                  statement_subtask: 8883933417640871930
                  test_group_id: 4853875059777515226
                  test_group_score: 8790711861458765932
                  untested_tests: 4032304587011601647
                  wrong_tests: 2946795653221984534
                - accepted_tests: 5715237542301360531
                  statement_subtask: 8883933417640871930
                  test_group_id: 4853875059777515226
                  test_group_score: 8790711861458765932
                  untested_tests: 4032304587011601647
                  wrong_tests: 2946795653221984534
            eval_scoring_tests:
                accepted: 3785261307906550490
                untested: 4223040205366050515
                wrong: 4062866428432752107
            eval_status: Explicabo error enim reprehenderit nulla.
            p_lang_display_name: Dignissimos officiis soluta sunt.
            p_lang_id: Pariatur repudiandae dolores alias quia.
            p_lang_monaco_id: Suscipit autem est doloribus similique voluptas.
            subm_uuid: Ut fugit iusto molestiae.
            submission: Dolores sit in.
            task_id: Sunt ipsam.
            task_name: Illo aut rerum qui adipisci.
            username: Laudantium eaque optio nobis facere.
        required:
            - subm_uuid
            - submission
            - username
            - created_at
            - eval_status
            - p_lang_id
            - p_lang_display_name
            - p_lang_monaco_id
            - task_name
            - task_id
    SubtaskResultResponse:
        title: SubtaskResultResponse
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 6823374617431343915
                format: int64
            subtask_id:
                type: integer
                description: ID of the subtask
                example: 3769132138099838375
                format: int64
            subtask_score:
                type: integer
                description: Score of the subtask
                example: 26944324373111073
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 4625350320889224380
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 1878486714412599627
                format: int64
        example:
            accepted_tests: 7546927467534945766
            subtask_id: 9015295191540422774
            subtask_score: 404149647131089214
            untested_tests: 3502701306394534094
            wrong_tests: 5042314291640768014
        required:
            - subtask_id
            - subtask_score
            - accepted_tests
            - wrong_tests
            - untested_tests
    SubtaskResultResponseBody:
        title: SubtaskResultResponseBody
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 7054074809609208491
                format: int64
            subtask_id:
                type: integer
                description: ID of the subtask
                example: 1070167026568609235
                format: int64
            subtask_score:
                type: integer
                description: Score of the subtask
                example: 6629577328435678913
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 5160368591318523162
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 2884205813101374646
                format: int64
        example:
            accepted_tests: 4731991551958162189
            subtask_id: 9020100960596679400
            subtask_score: 5952308623003848701
            untested_tests: 9014855105174665521
            wrong_tests: 6536029247891145824
        required:
            - subtask_id
            - subtask_score
            - accepted_tests
            - wrong_tests
            - untested_tests
    TaskResponse:
        title: TaskResponse
        type: object
        properties:
            cpu_time_limit_seconds:
                type: number
                description: CPU time limit in seconds
                example: 0.5
                format: double
            default_md_statement:
                $ref: '#/definitions/MarkdownStatementResponse'
            default_pdf_statement_url:
                type: string
                description: URL of the default PDF statement
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating:
                type: integer
                description: Difficulty rating of the task
                example: 3
                enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                format: int64
            examples:
                type: array
                items:
                    $ref: '#/definitions/ExampleResponse'
                description: Examples for the task
                example:
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Quis iure assumenda numquam officia dolores.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Quis iure assumenda numquam officia dolores.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Quis iure assumenda numquam officia dolores.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Quis iure assumenda numquam officia dolores.
                      output: |
                        10
            illustration_img_url:
                type: string
                description: URL of the illustration image
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes:
                type: integer
                description: Memory limit in megabytes
                example: 256
                format: int64
            origin_notes:
                type: object
                description: Origin notes for the task
                example:
                    lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
                additionalProperties:
                    type: string
                    example: Dolores quaerat autem mollitia aperiam ut aliquam.
            origin_olympiad:
                type: string
                description: Origin olympiad of the task
                example: LIO
            published_task_id:
                type: string
                description: ID of the published task
                example: kvadrputekl
            task_full_name:
                type: string
                description: Full name of the task
                example: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                type: array
                items:
                    $ref: '#/definitions/StInputsResponse'
                description: Visible input subtasks
                example:
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
        description: Represents a competitive programming task
        example:
            cpu_time_limit_seconds: 0.5
            default_md_statement:
                input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
                notes: Molestiae quidem deleniti.
                output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
                scoring: Consequatur et molestias officiis omnis explicabo.
                story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
            default_pdf_statement_url: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating: 3
            examples:
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Quis iure assumenda numquam officia dolores.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Quis iure assumenda numquam officia dolores.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Quis iure assumenda numquam officia dolores.
                  output: |
                    10
            illustration_img_url: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes: 256
            origin_notes:
                lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
            origin_olympiad: LIO
            published_task_id: kvadrputekl
            task_full_name: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
        required:
            - published_task_id
            - task_full_name
            - memory_limit_megabytes
            - cpu_time_limit_seconds
            - origin_olympiad
            - difficulty_rating
    TasksGetTaskResponseBody:
        title: TasksGetTaskResponseBody
        type: object
        properties:
            cpu_time_limit_seconds:
                type: number
                description: CPU time limit in seconds
                example: 0.5
                format: double
            default_md_statement:
                $ref: '#/definitions/MarkdownStatementResponseBody'
            default_pdf_statement_url:
                type: string
                description: URL of the default PDF statement
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating:
                type: integer
                description: Difficulty rating of the task
                example: 3
                enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                format: int64
            examples:
                type: array
                items:
                    $ref: '#/definitions/ExampleResponseBody'
                description: Examples for the task
                example:
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Autem praesentium nihil eveniet velit inventore.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Autem praesentium nihil eveniet velit inventore.
                      output: |
                        10
                    - input: |
                        5 9 3
                        A....X..B
                        ..X..X.X.
                        .XXX.XX..
                        X.X.X..X.
                        ...XX....
                      md_note: Autem praesentium nihil eveniet velit inventore.
                      output: |
                        10
            illustration_img_url:
                type: string
                description: URL of the illustration image
                example: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes:
                type: integer
                description: Memory limit in megabytes
                example: 256
                format: int64
            origin_notes:
                type: object
                description: Origin notes for the task
                example:
                    lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
                additionalProperties:
                    type: string
                    example: Aut rem non dolorem expedita.
            origin_olympiad:
                type: string
                description: Origin olympiad of the task
                example: LIO
            published_task_id:
                type: string
                description: ID of the published task
                example: kvadrputekl
            task_full_name:
                type: string
                description: Full name of the task
                example: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                type: array
                items:
                    $ref: '#/definitions/StInputsResponseBody'
                description: Visible input subtasks
                example:
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
                    - inputs:
                        - |
                          5 5 3
                          A.X..
                          X.B.X
                          ....X
                          XX...
                          X.XXX
                        - |
                          6 3 1
                          ...
                          XA.
                          .X.
                          X..
                          B..
                          ...
                        - |
                          6 4 2
                          X...
                          .AXX
                          X..X
                          .X.X
                          XXXX
                          X.BX
                      subtask: 1
        example:
            cpu_time_limit_seconds: 0.5
            default_md_statement:
                input: Ievaddatu pirmajā rindā dotas trīs naturālu skaitļu...
                notes: Suscipit quibusdam qui.
                output: Izvaddatu vienīgajā rindā jābūt veselam skaitlim...
                scoring: Nihil ut voluptas.
                story: Krišjānis ir uzkonstruējis kvadrātveida putekļsūcēju (saīsināti – KP), kas ir neaizstājams palīgs viņa darbnīcas uzkopšanā...
            default_pdf_statement_url: https://dvhk4hiwp1rmf.cloudfront.net/task-pdf-statements/f27386f1b69f3c020335fe7c84316c5da099933832043e6a5820bcdb0cd66a81.pdf
            difficulty_rating: 3
            examples:
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Autem praesentium nihil eveniet velit inventore.
                  output: |
                    10
                - input: |
                    5 9 3
                    A....X..B
                    ..X..X.X.
                    .XXX.XX..
                    X.X.X..X.
                    ...XX....
                  md_note: Autem praesentium nihil eveniet velit inventore.
                  output: |
                    10
            illustration_img_url: https://dvhk4hiwp1rmf.cloudfront.net/task-illustrations/bafcc0aa1b4c56faa44f5f3b2a5abd9529af941eb9a9b10f541b436762d4948a.png
            memory_limit_megabytes: 256
            origin_notes:
                lv: Uzdevums parādījās Latvijas 37. informātikas olimpiādes (2023./2024. gads) skolas kārtā.
            origin_olympiad: LIO
            published_task_id: kvadrputekl
            task_full_name: Kvadrātveida putekļsūcējs
            visible_input_subtasks:
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
                - inputs:
                    - |
                      5 5 3
                      A.X..
                      X.B.X
                      ....X
                      XX...
                      X.XXX
                    - |
                      6 3 1
                      ...
                      XA.
                      .X.
                      X..
                      B..
                      ...
                    - |
                      6 4 2
                      X...
                      .AXX
                      X..X
                      .X.X
                      XXXX
                      X.BX
                  subtask: 1
        required:
            - published_task_id
            - task_full_name
            - memory_limit_megabytes
            - cpu_time_limit_seconds
            - origin_olympiad
            - difficulty_rating
    TestGroupResultResponse:
        title: TestGroupResultResponse
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 4247551106889161858
                format: int64
            statement_subtask:
                type: integer
                description: Statement subtask
                example: 337240561112468343
                format: int64
            test_group_id:
                type: integer
                description: ID of the test group
                example: 7389224452776661635
                format: int64
            test_group_score:
                type: integer
                description: Score of the test group
                example: 897990292865620284
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 4006160473146922405
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 3198279192625574129
                format: int64
        example:
            accepted_tests: 2699817484274423567
            statement_subtask: 8495029994554873342
            test_group_id: 5807846144399143452
            test_group_score: 7322021788854356656
            untested_tests: 6465363623918634121
            wrong_tests: 4002009483983178050
        required:
            - test_group_id
            - test_group_score
            - statement_subtask
            - accepted_tests
            - wrong_tests
            - untested_tests
    TestGroupResultResponseBody:
        title: TestGroupResultResponseBody
        type: object
        properties:
            accepted_tests:
                type: integer
                description: Number of accepted tests
                example: 284689657309451178
                format: int64
            statement_subtask:
                type: integer
                description: Statement subtask
                example: 7843229112551072863
                format: int64
            test_group_id:
                type: integer
                description: ID of the test group
                example: 1307628029465816200
                format: int64
            test_group_score:
                type: integer
                description: Score of the test group
                example: 698080032946192988
                format: int64
            untested_tests:
                type: integer
                description: Number of untested tests
                example: 3172541630126790766
                format: int64
            wrong_tests:
                type: integer
                description: Number of wrong tests
                example: 3840003079295085756
                format: int64
        example:
            accepted_tests: 4817721516806989452
            statement_subtask: 1094281719987283325
            test_group_id: 6077036221240797131
            test_group_score: 1646075165524771846
            untested_tests: 7434775528761662098
            wrong_tests: 3087491112219868501
        required:
            - test_group_id
            - test_group_score
            - statement_subtask
            - accepted_tests
            - wrong_tests
            - untested_tests
    TestsResultResponse:
        title: TestsResultResponse
        type: object
        properties:
            accepted:
                type: integer
                description: Number of accepted tests
                example: 2192184140755377834
                format: int64
            untested:
                type: integer
                description: Number of untested tests
                example: 4590124892103517407
                format: int64
            wrong:
                type: integer
                description: Number of wrong tests
                example: 3203371166598071063
                format: int64
        example:
            accepted: 339398659136067111
            untested: 4095233109102480106
            wrong: 5724166556919609356
        required:
            - accepted
            - wrong
            - untested
    TestsResultResponseBody:
        title: TestsResultResponseBody
        type: object
        properties:
            accepted:
                type: integer
                description: Number of accepted tests
                example: 7577954407496053838
                format: int64
            untested:
                type: integer
                description: Number of untested tests
                example: 2945953862351909914
                format: int64
            wrong:
                type: integer
                description: Number of wrong tests
                example: 213089140895190895
                format: int64
        example:
            accepted: 5045165632095592072
            untested: 8151312635045316026
            wrong: 5578459838848888149
        required:
            - accepted
            - wrong
            - untested
    UsersCreateUserRequestBody:
        title: UsersCreateUserRequestBody
        type: object
        properties:
            email:
                type: string
                description: Email of the user
                example: johndoe@example.com
                format: email
            firstname:
                type: string
                description: First name of the user
                example: John
            lastname:
                type: string
                description: Last name of the user
                example: Doe
            password:
                type: string
                description: Password of the user
                example: password123
            username:
                type: string
                description: Username of the user
                example: johndoe
        example:
            email: johndoe@example.com
            firstname: John
            lastname: Doe
            password: password123
            username: johndoe
        required:
            - username
            - email
            - firstname
            - lastname
            - password
    UsersCreateUserResponseBody:
        title: UsersCreateUserResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email of the user
                example: johndoe@example.com
                format: email
            firstname:
                type: string
                description: First name of the user
                example: John
            lastname:
                type: string
                description: Last name of the user
                example: Doe
            username:
                type: string
                description: Username of the user
                example: johndoe
            uuid:
                type: string
                description: Unique user UUID
                example: 550e8400-e29b-41d4-a716-446655440000
        example:
            email: johndoe@example.com
            firstname: John
            lastname: Doe
            username: johndoe
            uuid: 550e8400-e29b-41d4-a716-446655440000
        required:
            - uuid
            - username
            - email
            - firstname
            - lastname
    UsersGetUserResponseBody:
        title: UsersGetUserResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email of the user
                example: johndoe@example.com
                format: email
            firstname:
                type: string
                description: First name of the user
                example: John
            lastname:
                type: string
                description: Last name of the user
                example: Doe
            username:
                type: string
                description: Username of the user
                example: johndoe
            uuid:
                type: string
                description: Unique user UUID
                example: 550e8400-e29b-41d4-a716-446655440000
        example:
            email: johndoe@example.com
            firstname: John
            lastname: Doe
            username: johndoe
            uuid: 550e8400-e29b-41d4-a716-446655440000
        required:
            - uuid
            - username
            - email
            - firstname
            - lastname
    UsersLoginRequestBody:
        title: UsersLoginRequestBody
        type: object
        properties:
            password:
                type: string
                description: Password of the user
                example: password123
            username:
                type: string
                description: Username of the user
                example: johndoe
        example:
            password: password123
            username: johndoe
        required:
            - username
            - password
    UsersQueryCurrentJWTResponseBody:
        title: UsersQueryCurrentJWTResponseBody
        type: object
        properties:
            audience:
                type: array
                items:
                    type: string
                    example: Eligendi quae tempora qui hic quo.
                example:
                    - Distinctio amet et et.
                    - Molestiae ut animi.
            email:
                type: string
                example: Sed beatae non repudiandae.
            expires_at:
                type: string
                example: Modi ratione quod.
            firstname:
                type: string
                example: Sunt rem sed ipsum error sint perspiciatis.
            issued_at:
                type: string
                example: Et et.
            issuer:
                type: string
                example: Expedita alias eveniet expedita vitae occaecati temporibus.
            lastname:
                type: string
                example: Quis sunt.
            not_before:
                type: string
                example: Sit velit.
            scopes:
                type: array
                items:
                    type: string
                    example: Nostrum et quia.
                example:
                    - Nam provident hic.
                    - Qui aliquam quisquam doloribus aspernatur quia minima.
                    - Sint ad et maiores quia est.
                    - Est et iste et placeat consequatur eaque.
            subject:
                type: string
                example: Quis at aut.
            username:
                type: string
                example: Doloremque rerum aut incidunt architecto in.
            uuid:
                type: string
                example: Corporis tenetur velit.
        example:
            audience:
                - Officia doloremque in recusandae rerum architecto.
                - Et amet quia voluptate fugiat sint.
            email: Sint ullam pariatur aliquam tempore in.
            expires_at: Enim mollitia dolorum aliquam aut est.
            firstname: Voluptatem sed repellat.
            issued_at: Ut qui.
            issuer: Sunt exercitationem.
            lastname: Provident blanditiis est.
            not_before: Aut maiores.
            scopes:
                - Ad ex deleniti possimus et rem quia.
                - Est quia laborum.
                - Eligendi dolor.
            subject: Ut est enim.
            username: Est quas id tempora repellat.
            uuid: Ut tenetur rerum provident modi voluptatem odio.
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: |4-
            **Security Scopes**:
              * `users:read`: Read users
              * `users:write`: Write users
        name: Authorization
        in: header
    jwt_query_Authorization:
        type: apiKey
        description: |4-
            **Security Scopes**:
              * `users:read`: Read users
              * `users:write`: Write users
        name: Authorization
        in: query
